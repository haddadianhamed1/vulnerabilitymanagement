Asset IP Address,Asset Names,Asset OS Name,Asset OS Version,Exploit URLs,Service Name,Service Port,Service Product,Vulnerability Additional URLs,Vulnerability Age,Vulnerability CVE IDs,Vulnerability CVE URLs,Vulnerability Description,Vulnerability ID,Vulnerability Proof,Vulnerability Published Date,Vulnerability Reference IDs,Vulnerability Reference URLs,Vulnerability Risk Score,Vulnerability Severity Level,Vulnerability Solution,Vulnerability Test Date,Vulnerable Since,Vulnerability Title
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,http://en.wikipedia.org/wiki/Cross_site_scripting,100 Days,,,"The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser. This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java, which do not adequately filter data sent along with page requests or by vulnerable HTTP servers. This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.

An attacker can do the following damage with an expoloit script: 
 * access other sites inside another client's private intranet

 * steal another client's cookie(s)

 * modify another client's cookie(s)

 * steal another client's submitted form data

 * modify another client's submitted form data before it reaches the server

 * submit a form to your Web application on the user's behalf that modifies passwords or other application data


The two most common methods of attack are: 
 * Having a user click a URL link sent in an e-mail

 * Having a user click a URL link while visiting a Web site


In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to trigger the XSS attack.

Note that SSL connectivity does not protect against this issue.",http-cgi-0010,"Injected into the ""P"" URL parameter (Using method GET) in  https://10.103.65.100/?P=+ADw-script+AD4-alert(42)+ADw-/script+AD4-  by changing the URL to  https://10.103.65.100/?P=\""><script>448619646 


1: <!doctype html><html><head><meta http-equiv=""content-type"" content=... 2: var hashTag = '', hashPos = document.location.href.indexOf('#'); 3: if (hashPos > -1) { hashTag = document.location.href.substr(hashPos... 4: ...43/en-US/?P=\\\""><script>448619646"" + hashTag;",2004-11-01,"CERT:CA-2000-02,OWASP-2010:A2,OWASP-2013:A3","http://www.us-cert.gov/cas/techalerts/CA-2000-02.html,https://www.owasp.org/index.php/Top_10_2010-A2,https://www.owasp.org/index.php/Top_10_2013-A3",678,6,"Fix Cross Site Scripting Vulnerability


Audit the affected url and other similar dynamic pages or scripts that could be relaying untrusted malicious data from the user input. In general, the following practices should be followed while developing dynamic web content:

 * Explicitly set the character set encoding for each page generated by the web server

 * Identify special characters

 * Encode dynamic output elements

 * Filter specific characters in dynamic elements

 * Examine cookies

 For more information on the above practices, read the following CERT advisory:  CERT Advisory CA-2000-02 (http://www.cert.org/tech_tips/malicious_code_mitigation.html) 


 * 
      For ASP.NET applications, the validateRequest attribute can be added to the page or the web.config. For example:

       <%@ Page ... validateRequest=""true"" %> OR <system.web> <pages validateRequest=""true"" /> </system.web> 

      In addition, all dynamic content should be HTML encoded using HTTPUtility.HTMLEncode.


 * 
      For PHP applications, input data should be validated using functions such as strip_tags and utf8_decode. Dynamic content should be HTML encoded using htmlentities.


 * 
      For Perl applications, input data should be validated whenever possible using regular expressions. Dynamic content should be HTML encoded using HTML::Entities::encode or Apache::Util::html_encode (when using mod_perl).",2016-09-15,2016-06-07,Cross Site Scripting Vulnerability
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,http://en.wikipedia.org/wiki/Cross_site_scripting,100 Days,,,"The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser. This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java, which do not adequately filter data sent along with page requests or by vulnerable HTTP servers. This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.

An attacker can do the following damage with an expoloit script: 
 * access other sites inside another client's private intranet

 * steal another client's cookie(s)

 * modify another client's cookie(s)

 * steal another client's submitted form data

 * modify another client's submitted form data before it reaches the server

 * submit a form to your Web application on the user's behalf that modifies passwords or other application data


The two most common methods of attack are: 
 * Having a user click a URL link sent in an e-mail

 * Having a user click a URL link while visiting a Web site


In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to trigger the XSS attack.

Note that SSL connectivity does not protect against this issue.",http-cgi-0010,"Injected into the ""CiRestriction"" URL parameter (Using method GET) in  https://10.103.65.100/null.htw?CiWebHitsFile=/<script>xss</script>.aspx&CiRestriction=none&CiHiliteType=Full  by changing the URL to  https://10.103.65.100/null.htw?CiWebHitsFile=/<script>xss</script>.aspx&CiRestriction=\""><script>448619646&CiHiliteType=Full 


1: <!doctype html><html><head><meta http-equiv=""content-type"" content=... 2: var hashTag = '', hashPos = document.location.href.indexOf('#'); 3: if (hashPos > -1) { hashTag = document.location.href.substr(hashPos... 4: ...Restriction=\\\""><script>448619646&CiHiliteType=Full"" + hashTag;",2004-11-01,"CERT:CA-2000-02,OWASP-2010:A2,OWASP-2013:A3","http://www.us-cert.gov/cas/techalerts/CA-2000-02.html,https://www.owasp.org/index.php/Top_10_2010-A2,https://www.owasp.org/index.php/Top_10_2013-A3",678,6,"Fix Cross Site Scripting Vulnerability


Audit the affected url and other similar dynamic pages or scripts that could be relaying untrusted malicious data from the user input. In general, the following practices should be followed while developing dynamic web content:

 * Explicitly set the character set encoding for each page generated by the web server

 * Identify special characters

 * Encode dynamic output elements

 * Filter specific characters in dynamic elements

 * Examine cookies

 For more information on the above practices, read the following CERT advisory:  CERT Advisory CA-2000-02 (http://www.cert.org/tech_tips/malicious_code_mitigation.html) 


 * 
      For ASP.NET applications, the validateRequest attribute can be added to the page or the web.config. For example:

       <%@ Page ... validateRequest=""true"" %> OR <system.web> <pages validateRequest=""true"" /> </system.web> 

      In addition, all dynamic content should be HTML encoded using HTTPUtility.HTMLEncode.


 * 
      For PHP applications, input data should be validated using functions such as strip_tags and utf8_decode. Dynamic content should be HTML encoded using htmlentities.


 * 
      For Perl applications, input data should be validated whenever possible using regular expressions. Dynamic content should be HTML encoded using HTML::Entities::encode or Apache::Util::html_encode (when using mod_perl).",2016-09-15,2016-06-07,Cross Site Scripting Vulnerability
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,http://en.wikipedia.org/wiki/Cross_site_scripting,100 Days,,,"The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser. This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java, which do not adequately filter data sent along with page requests or by vulnerable HTTP servers. This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.

An attacker can do the following damage with an expoloit script: 
 * access other sites inside another client's private intranet

 * steal another client's cookie(s)

 * modify another client's cookie(s)

 * steal another client's submitted form data

 * modify another client's submitted form data before it reaches the server

 * submit a form to your Web application on the user's behalf that modifies passwords or other application data


The two most common methods of attack are: 
 * Having a user click a URL link sent in an e-mail

 * Having a user click a URL link while visiting a Web site


In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to trigger the XSS attack.

Note that SSL connectivity does not protect against this issue.",http-cgi-0010,"Injected into the ""CiWebHitsFile"" URL parameter (Using method GET) in  https://10.103.65.100/null.htw?CiWebHitsFile=/<script>xss</script>.aspx&CiRestriction=none&CiHiliteType=Full  by changing the URL to  https://10.103.65.100/null.htw?CiWebHitsFile=\""><script>448619646&CiRestriction=none&CiHiliteType=Full 


1: <!doctype html><html><head><meta http-equiv=""content-type"" content=... 2: var hashTag = '', hashPos = document.location.href.indexOf('#'); 3: if (hashPos > -1) { hashTag = document.location.href.substr(hashPos... 4: ...WebHitsFile=\\\""><script>448619646&CiRestriction=none&CiHiliteType=...",2004-11-01,"CERT:CA-2000-02,OWASP-2010:A2,OWASP-2013:A3","http://www.us-cert.gov/cas/techalerts/CA-2000-02.html,https://www.owasp.org/index.php/Top_10_2010-A2,https://www.owasp.org/index.php/Top_10_2013-A3",678,6,"Fix Cross Site Scripting Vulnerability


Audit the affected url and other similar dynamic pages or scripts that could be relaying untrusted malicious data from the user input. In general, the following practices should be followed while developing dynamic web content:

 * Explicitly set the character set encoding for each page generated by the web server

 * Identify special characters

 * Encode dynamic output elements

 * Filter specific characters in dynamic elements

 * Examine cookies

 For more information on the above practices, read the following CERT advisory:  CERT Advisory CA-2000-02 (http://www.cert.org/tech_tips/malicious_code_mitigation.html) 


 * 
      For ASP.NET applications, the validateRequest attribute can be added to the page or the web.config. For example:

       <%@ Page ... validateRequest=""true"" %> OR <system.web> <pages validateRequest=""true"" /> </system.web> 

      In addition, all dynamic content should be HTML encoded using HTTPUtility.HTMLEncode.


 * 
      For PHP applications, input data should be validated using functions such as strip_tags and utf8_decode. Dynamic content should be HTML encoded using htmlentities.


 * 
      For Perl applications, input data should be validated whenever possible using regular expressions. Dynamic content should be HTML encoded using HTML::Entities::encode or Apache::Util::html_encode (when using mod_perl).",2016-09-15,2016-06-07,Cross Site Scripting Vulnerability
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,http://en.wikipedia.org/wiki/Cross_site_scripting,100 Days,,,"The Web application is vulnerable to cross-site scripting (XSS), which allows attackers to take advantage of Web server scripts to inject JavaScript or HTML code that is executed on the client-side browser. This vulnerability is often caused by server-side scripts written in languages such as PHP, ASP, .NET, Perl or Java, which do not adequately filter data sent along with page requests or by vulnerable HTTP servers. This malicious code appears to come from your Web application when it runs in the browser of an unsuspecting user.

An attacker can do the following damage with an expoloit script: 
 * access other sites inside another client's private intranet

 * steal another client's cookie(s)

 * modify another client's cookie(s)

 * steal another client's submitted form data

 * modify another client's submitted form data before it reaches the server

 * submit a form to your Web application on the user's behalf that modifies passwords or other application data


The two most common methods of attack are: 
 * Having a user click a URL link sent in an e-mail

 * Having a user click a URL link while visiting a Web site


In both scenarios, the URL will generally link to the trusted site, but will contain additional data that is used to trigger the XSS attack.

Note that SSL connectivity does not protect against this issue.",http-cgi-0010,"Injected into the ""CiHiliteType"" URL parameter (Using method GET) in  https://10.103.65.100/null.htw?CiWebHitsFile=/<script>xss</script>.aspx&CiRestriction=none&CiHiliteType=Full  by changing the URL to  https://10.103.65.100/null.htw?CiWebHitsFile=/<script>xss</script>.aspx&CiRestriction=none&CiHiliteType=\""><script>448619646 


1: <!doctype html><html><head><meta http-equiv=""content-type"" content=... 2: var hashTag = '', hashPos = document.location.href.indexOf('#'); 3: if (hashPos > -1) { hashTag = document.location.href.substr(hashPos... 4: ...iHiliteType=\\\""><script>448619646"" + hashTag;",2004-11-01,"CERT:CA-2000-02,OWASP-2010:A2,OWASP-2013:A3","http://www.us-cert.gov/cas/techalerts/CA-2000-02.html,https://www.owasp.org/index.php/Top_10_2010-A2,https://www.owasp.org/index.php/Top_10_2013-A3",678,6,"Fix Cross Site Scripting Vulnerability


Audit the affected url and other similar dynamic pages or scripts that could be relaying untrusted malicious data from the user input. In general, the following practices should be followed while developing dynamic web content:

 * Explicitly set the character set encoding for each page generated by the web server

 * Identify special characters

 * Encode dynamic output elements

 * Filter specific characters in dynamic elements

 * Examine cookies

 For more information on the above practices, read the following CERT advisory:  CERT Advisory CA-2000-02 (http://www.cert.org/tech_tips/malicious_code_mitigation.html) 


 * 
      For ASP.NET applications, the validateRequest attribute can be added to the page or the web.config. For example:

       <%@ Page ... validateRequest=""true"" %> OR <system.web> <pages validateRequest=""true"" /> </system.web> 

      In addition, all dynamic content should be HTML encoded using HTTPUtility.HTMLEncode.


 * 
      For PHP applications, input data should be validated using functions such as strip_tags and utf8_decode. Dynamic content should be HTML encoded using htmlentities.


 * 
      For Perl applications, input data should be validated whenever possible using regular expressions. Dynamic content should be HTML encoded using HTML::Entities::encode or Apache::Util::html_encode (when using mod_perl).",2016-09-15,2016-06-07,Cross Site Scripting Vulnerability
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,,100 Days,,,"One or more of the system's partitions are mounted without certain hardening options enabled. While this is not a definite vulnerability on its own, system security may be improved by employing hardening techniques.",unix-partition-mounting-weakness,The following issues were discovered: /mobileiron.com partition does not have 'nodev' option set.,2005-01-15,,,545,2,"Partition Mounting Weakness


The specific way to modify the partition mount options varies from system to system. Consult your operating system's manual or mount man page.",2016-09-15,2016-06-07,Partition Mounting Weakness
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,,100 Days,,,"The umask value for root was found to be unsafe. The umask value determines the file permission for newly created files. It specifies the permissions which should not be given by default to the newly created file. Although the default value of umask in most unix systems is 022, it is a common practice to set it to 077 to be safe.",unix-umask-unsafe,The umask value was found to be 0022 but was expected to be 0077,2005-01-15,,,691,4,"Reset umask value


 To ensure complete access control over newly created files, set the umask value to 077 for root and other user accounts for both interactive and non-interactive processes. The umask value for interactive processes is typically set in a shell configuration file such as .login, .cshrc, .profile, .bashrc, .bash_profile, or others. For non-interactive processes, /etc/login.defs is a common location for controlling umask on Linux systems. In both cases, you may need to consult your operating system's documentation for the correct file(s) and settings.",2016-09-15,2016-06-07,Root's umask value is unsafe
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,"http://lists.mysql.com/internals/20600,http://marc.theaimsgroup.com/?l=bugtraq&m=110608297217224&w=2,http://mysql.osuosl.org/doc/mysql/en/News-4.1.10.html,http://www.debian.org/security/2005/dsa-647",100 Days,CVE-2005-0004,http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2005-0004,"Certain versions of the 'mysqlaccess' program shipped with MySQL are vulnerable to a symlink attack because the temporary files used are easy to predict. As a result, a local attacker can overwrite any file which the calling process has write access to.",unix-mysql-mysqlaccess-temp-file,The following file versions were found to be less than 2.07: /usr/bin/mysqlaccess,2005-01-17,"BID:12277,CONECTIVA:CLA-2005:947,DEBIAN:DSA-647,MANDRAKE:MDKSA-2005:036,XF:18922","http://www.securityfocus.com/bid/12277,http://distro.conectiva.com/atualizacoes/?id=a&anuncio=CLA-2005:947,http://www.debian.org/security/dsa-647,http://www.mandriva.com/security/advisories?name=MDKSA-2005:036,http://xforce.iss.net/xforce/xfdb/18922",698,5,"Upgrade MySQL


As of January 25th, 2005, there does not exist an official fix from the MySQL development team. However, several vendors have provided their own patches:

 * Debian has released fixes to their stable (woody) and unstable (sid) branches: http://www.debian.org/security/2005/dsa-647",2016-09-15,2016-06-07,MySQL mysqlaccess Temporary File Symlink Attack
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,,100 Days,,,"By default, many linux systems enable a feature called ICMP redirection, where the machine will alter its route table in response to an ICMP redirect message from any network device.

There is a risk that this feature could be used to subvert a host's routing table in order to compromise its security (e.g., tricking it into sending packets via a specific route where they may be sniffed or altered).",linux-icmp-redirect,"* The net.ipv4.conf.all.accept_redirects sysctl variable is set to 0, as expected.

 * The net.ipv4.conf.default.accept_redirects sysctl variable is set to 1, expected 0.

 * The net.ipv4.conf.all.secure_redirects sysctl variable is set to 1, expected 0.

 * The net.ipv4.conf.default.secure_redirects sysctl variable is set to 1, expected 0.",2003-12-31,"BID:6823,MSKB:293626,XF:cisco-ios-icmp-redirect(11306)","http://www.securityfocus.com/bid/6823,https://support.microsoft.com/en-us/kb/293626,http://xforce.iss.net/xforce/xfdb/11306",715,7,"Linux

Disable ICMP redirect support


Issue the following commands as root:

 sysctl -w net.ipv4.conf.all.accept_redirects=0

 sysctl -w net.ipv4.conf.default.accept_redirects=0

 sysctl -w net.ipv4.conf.all.secure_redirects=0

 sysctl -w net.ipv4.conf.default.secure_redirects=0

These settings can be added to /etc/sysctl.conf to make them permanent.",2016-09-15,2016-06-07,ICMP redirection enabled
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,,87 Days,,,World writable files were found on the system. A file that can be written by any user on the system could be a serious security flaw.,unix-world-writable-files,"The following world writable files were found.
 * /root/setuptools-1.4.2/tests/shlib_test/setup.py

 * /root/setuptools-1.4.2/tests/shlib_test/hellolib.c

 * /root/setuptools-1.4.2/tests/shlib_test/hello.c

 * /root/setuptools-1.4.2/tests/shlib_test/test_hello.py

 * /root/setuptools-1.4.2/tests/shlib_test/hello.pyx

 * /root/setuptools-1.4.2/tests/api_tests.txt

 * /root/setuptools-1.4.2/tests/test_pkg_resources.py

 * /root/setuptools-1.4.2/tests/manual_test.py

 * /root/setuptools-1.4.2/tests/test_ez_setup.py

 * /root/setuptools-1.4.2/setuptools/cli-arm-32.exe

 * /root/setuptools-1.4.2/setuptools/tests/test_develop.py

 * /root/setuptools-1.4.2/setuptools/tests/indexes/test_links_priority/external.html

 * /root/setuptools-1.4.2/setuptools/tests/indexes/test_links_priority/simple/foobar/index.html

 * /root/setuptools-1.4.2/setuptools/tests/environment.py

 * /root/setuptools-1.4.2/setuptools/tests/test_upload_docs.py

 * /root/setuptools-1.4.2/setuptools/tests/entries-v10

 * /root/setuptools-1.4.2/setuptools/tests/__init__.py

 * /root/setuptools-1.4.2/setuptools/tests/py26compat.py

 * /root/setuptools-1.4.2/setuptools/tests/test_svn.py

 * /root/setuptools-1.4.2/setuptools/tests/test_sandbox.py

 * /root/setuptools-1.4.2/setuptools/tests/doctest.py

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn18_ext_list.txt

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn15_info.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn17_ext_list.txt

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn13_example.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn17_ext_list.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn14_ext_list.txt

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy18.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy17.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn13_info.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn17_info.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn14_ext_list.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn15_example.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn13_ext_list.txt

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn18_ext_list.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy16.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn18_example.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy14.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn16_info.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn13_ext_list.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy15.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn18_info.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/dummy13.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn14_info.xml

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn14_example.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn15_ext_list.txt

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn17_example.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn16_example.zip

 * /root/setuptools-1.4.2/setuptools/tests/svn_data/svn16_ext_list.txt",2005-01-15,,,643,4,"Remove world write permissions


For each world-writable file, determine whether there is a good reason for it to be world writable. If not, remove world write permissions for the file.",2016-09-15,2016-06-20,World writable files exist
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,,87 Days,,,"The subject common name (CN) field in the X.509 certificate does not match the name of the entity presenting the certificate.

Before issuing a certificate, a Certification Authority (CA) must check the identity of the entity requesting the certificate, as specified in the CA's Certification Practice Statement (CPS). Thus, standard certificate validation procedures require the subject CN field of a certificate to match the actual name of the entity presenting the certificate. For example, in a certificate presented by ""https://www.example.com/"", the CN should be ""www.example.com"". 

In order to detect and prevent active eavesdropping attacks, the validity of a certificate must be verified, or else an attacker could then launch a man-in-the-middle attack and gain full control of the data stream. Of particular importance is the validity of the subject's CN, that should match the name of the entity (hostname).

A CN mismatch most often occurs due to a configuration error, though it can also indicate that a man-in-the-middle attack is being conducted.",certificate-common-name-mismatch,"The subject common name found in the X.509 certificate does not seem to match the scan target:
 * Subject CN *.mobileiron.com does not match target name specified in the site.

 * Subject CN *.mobileiron.com does not match DNS name specified in the site.

 * Subject CN *.mobileiron.com could not be resolved to an IP address via DNS lookup

 * Subject Alternative Name *.mobileiron.com does not match target name specified in the site.

 * Subject Alternative Name mobileiron.com does not match target name specified in the site.

 * Subject Alternative Name appgw.mobileiron.com does not match target name specified in the site.

 * Subject Alternative Name techops.mobileiron.com does not match target name specified in the site.

 * Subject Alternative Name ftp.mobileiron.com does not match target name specified in the site.

 * Subject Alternative Name *.mobileiron.com does not match DNS name specified in the site.

 * Subject Alternative Name mobileiron.com does not match DNS name specified in the site.

 * Subject Alternative Name appgw.mobileiron.com does not match DNS name specified in the site.

 * Subject Alternative Name techops.mobileiron.com does not match DNS name specified in the site.

 * Subject Alternative Name ftp.mobileiron.com does not match DNS name specified in the site.",2007-08-03,,,746,7,"Fix the subject's Common Name (CN) field in the certificate

 The subject's common name (CN) field in the X.509 certificate should be fixed to reflect the name of the entity presenting the certificate (e.g., the hostname). This is done by generating a new certificate usually signed by a Certification Authority (CA) trusted by both the client and server.",2016-09-15,2016-06-20,X.509 Certificate Subject CN Does Not Match the Entity Name
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,,100 Days,,,"Anonymous root logins should only be allowed from system console. /etc/securetty allows you to specify on which tty's and virtual consoles root is allowed to login. The tty and vc's listed in this file will allow root to login on certain tty's and VC's. On other tty or vc's root user will not be allowed and user has to ""su"" to become root.",unix-anonymous-root-logins,"Following entries in /etc/securetty  may allow anonymous root logins: 
 * hvc0",2004-11-30,,,698,7,"Edit '/etc/securetty' entries


Remove all the entries in /etc/securetty except console, tty[0-9]* and vc\[0-9]* 

Note: ssh does not use /etc/securetty. To disable root login through ssh, use the ""PermitRootLogin"" setting in /etc/ssh/sshd_config and restart the ssh daemon.",2016-09-15,2016-06-07,Anonymous root login is allowed
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,System,0,,"http://uptime.netcraft.com,http://www.forensicswiki.org/wiki/TCP_timestamps,http://www.ietf.org/rfc/rfc1323.txt",100 Days,,,"The remote host responded with a TCP timestamp. The TCP timestamp response can be used to approximate the remote host's uptime, potentially aiding in further attacks. Additionally, some operating systems can be fingerprinted based on the behavior of their TCP timestamps.",generic-tcp-timestamp,Able to determine system boot time.,1997-08-01,,,0.0,1,"* Cisco
      Disable TCP timestamp responses on Cisco

      
       Run the following command to disable TCP timestamps: 

       no ip tcp timestamp 



 * FreeBSD
      Disable TCP timestamp responses on FreeBSD

      
       Set the value of net.inet.tcp.rfc1323 to 0 by running the following command: 

       sysctl -w net.inet.tcp.rfc1323=0 

       Additionally, put the following value in the default sysctl configuration file, generally sysctl.conf: 

       net.inet.tcp.rfc1323=0 



 * Linux
      Disable TCP timestamp responses on Linux

      
       Set the value of net.ipv4.tcp_timestamps to 0 by running the following command: 

       sysctl -w net.ipv4.tcp_timestamps=0 

       Additionally, put the following value in the default sysctl configuration file, generally sysctl.conf: 

       net.ipv4.tcp_timestamps=0 



 * OpenBSD
      Disable TCP timestamp responses on OpenBSD

      
       Set the value of net.inet.tcp.rfc1323 to 0 by running the following command: 

       sysctl -w net.inet.tcp.rfc1323=0 

       Additionally, put the following value in the default sysctl configuration file, generally sysctl.conf: 

       net.inet.tcp.rfc1323=0 



 * Microsoft Windows NT, Microsoft Windows NT Workstation, Microsoft Windows NT Server, Microsoft Windows NT Advanced Server, Microsoft Windows NT Server, Enterprise Edition, Microsoft Windows NT Server, Terminal Server Edition, Microsoft Windows 95, Microsoft Windows 98, Microsoft Windows 98SE, Microsoft Windows ME, Microsoft Windows 2000, Microsoft Windows 2000 Professional, Microsoft Windows 2000 Server, Microsoft Windows 2000 Advanced Server, Microsoft Windows 2000 Datacenter Server, Microsoft Windows XP, Microsoft Windows XP Home, Microsoft Windows XP Professional, Microsoft Windows XP Tablet PC Edition, Microsoft Windows CE, Microsoft Windows Server 2003, Microsoft Windows Server 2003, Standard Edition, Microsoft Windows Server 2003, Enterprise Edition, Microsoft Windows Server 2003, Datacenter Edition, Microsoft Windows Server 2003, Web Edition, Microsoft Windows Small Business Server 2003, Microsoft Windows Server 2003 R2, Microsoft Windows Server 2003 R2, Standard Edition, Microsoft Windows Server 2003 R2, Enterprise Edition, Microsoft Windows Server 2003 R2, Datacenter Edition, Microsoft Windows Server 2003 R2, Web Edition, Microsoft Windows Small Business Server 2003 R2, Microsoft Windows Server 2003 R2, Express Edition, Microsoft Windows Server 2003 R2, Workgroup Edition
      Disable TCP timestamp responses on Windows versions before Vista

      
       Set the Tcp1323Opts value in the following key to 1: 

       HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters 



 * Microsoft Windows Server 2008, Microsoft Windows Server 2008 Standard Edition, Microsoft Windows Server 2008 Enterprise Edition, Microsoft Windows Server 2008 Datacenter Edition, Microsoft Windows Server 2008 HPC Edition, Microsoft Windows Server 2008 Web Edition, Microsoft Windows Server 2008 Storage Edition, Microsoft Windows Small Business Server 2008, Microsoft Windows Essential Business Server 2008, Microsoft Windows Server 2008 R2, Microsoft Windows Server 2008 R2, Standard Edition, Microsoft Windows Server 2008 R2, Enterprise Edition, Microsoft Windows Server 2008 R2, Datacenter Edition, Microsoft Windows Server 2008 R2, Web Edition, Microsoft Windows Server 2012, Microsoft Windows Server 2012 Standard Edition, Microsoft Windows Server 2012 Foundation Edition, Microsoft Windows Server 2012 Essentials Edition, Microsoft Windows Server 2012 Datacenter Edition, Microsoft Windows Storage Server 2012, Microsoft Windows Vista, Microsoft Windows Vista Home, Basic Edition, Microsoft Windows Vista Home, Basic N Edition, Microsoft Windows Vista Home, Premium Edition, Microsoft Windows Vista Ultimate Edition, Microsoft Windows Vista Enterprise Edition, Microsoft Windows Vista Business Edition, Microsoft Windows Vista Business N Edition, Microsoft Windows Vista Starter Edition, Microsoft Windows 7, Microsoft Windows 7 Home, Basic Edition, Microsoft Windows 7 Home, Basic N Edition, Microsoft Windows 7 Home, Premium Edition, Microsoft Windows 7 Home, Premium N Edition, Microsoft Windows 7 Ultimate Edition, Microsoft Windows 7 Ultimate N Edition, Microsoft Windows 7 Enterprise Edition, Microsoft Windows 7 Enterprise N Edition, Microsoft Windows 7 Professional Edition, Microsoft Windows 7 Starter Edition, Microsoft Windows 7 Starter N Edition, Microsoft Windows 8, Microsoft Windows 8 Enterprise Edition, Microsoft Windows 8 Professional Edition, Microsoft Windows 8 RT, Microsoft Windows Longhorn Server Beta
      Disable TCP timestamp responses on Windows versions since Vista

      
       TCP timestamps cannot be reliably disabled on this OS. If TCP timestamps present enough of a risk, put a firewall capable of blocking TCP timestamp packets in front of the affected assets.",2016-09-15,2016-06-07,TCP timestamp response
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,"http://www.nist.gov/manuscript-publication-search.cfm?pub_id=915295,https://wiki.mozilla.org/Security/Server_Side_TLS,https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet#Rule_-_Only_Support_Strong_Cryptographic_Ciphers,http://support.microsoft.com/kb/245030/,https://tools.ietf.org/html/rfc7540/",100 Days,,,"The server is configured to support ciphers known as static key ciphers. These ciphers don't support ""Forward Secrecy"". In the new specification for HTTP/2, these ciphers have been blacklisted.",ssl-static-key-ciphers,"* 
      Negotiated with the following insecure cipher suites: 
    * TLS 1.0 ciphers: 
       * TLS_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_AES_128_CBC_SHA

       * TLS_RSA_WITH_AES_256_CBC_SHA


    * TLS 1.1 ciphers: 
       * TLS_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_AES_128_CBC_SHA

       * TLS_RSA_WITH_AES_256_CBC_SHA


    * TLS 1.2 ciphers: 
       * TLS_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_AES_128_CBC_SHA

       * TLS_RSA_WITH_AES_128_CBC_SHA256

       * TLS_RSA_WITH_AES_128_GCM_SHA256

       * TLS_RSA_WITH_AES_256_CBC_SHA

       * TLS_RSA_WITH_AES_256_CBC_SHA256

       * TLS_RSA_WITH_AES_256_GCM_SHA384",2015-02-01,,,226,3,"Disable TLS/SSL support for static key cipher suites


Configure the server to disable support for static key cipher suites.

For Microsoft IIS web servers, see Microsoft Knowledgebase article  245030 (http://support.microsoft.com/kb/245030/)  for instructions on disabling static key cipher suites. 

The following recommended configuration provides a higher level of security. This configuration is compatible with Firefox 27, Chrome 22, IE 11, Opera 14 and Safari 7. SSLv2, SSLv3, and TLSv1 protocols are not recommended in this configuration. Instead, use TLSv1.1 and TLSv1.2 protocols.

Refer to your server vendor documentation to apply the recommended cipher configuration:

ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK",2016-09-15,2016-06-07,TLS/SSL Server Supports The Use of Static Key Ciphers
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,"https://www.pcisecuritystandards.org/documents/Migrating_from_SSL_Early_TLS_Information%20Supplement_v1.pdf,http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf",100 Days,,,"The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1 and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of TLS v1.1 and recommends TLS v1.2.",tlsv1_1-enabled,Successfully connected over TLSv1.1,2014-10-14,,,247,3,"Disable insecure TLS/SSL protocol support


Configure the server to require clients to use TLS version 1.2 using Authenticated Encryption with Associated Data (AEAD) capable ciphers.",2016-09-15,2016-06-07,TLS Server Supports TLS version 1.1
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,"https://www.pcisecuritystandards.org/documents/Migrating_from_SSL_Early_TLS_Information%20Supplement_v1.pdf,http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf",100 Days,,,"The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1 and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of TLS v1.1 and recommends TLS v1.2.",tlsv1_0-enabled,Successfully connected over TLSv1.0,2014-10-14,,,314,4,"Disable insecure TLS/SSL protocol support


Configure the server to require clients to use TLS version 1.2 using Authenticated Encryption with Associated Data (AEAD) capable ciphers.",2016-09-15,2016-06-07,TLS Server Supports TLS version 1.0
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,"http://www.nist.gov/manuscript-publication-search.cfm?pub_id=915295,http://www.ecrypt.eu.org/ecrypt2/documents/D.SPA.20.pdf,http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf,https://wiki.mozilla.org/Security/Server_Side_TLS,https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet#Rule_-_Only_Support_Strong_Cryptographic_Ciphers,http://support.microsoft.com/kb/245030/",100 Days,,,"Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the 3DES (Triple Data Encryption Standard) algorithm. Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3. ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.",ssl-3des-ciphers,"* 
      Negotiated with the following insecure cipher suites: 
    * TLS 1.0 ciphers: 
       * TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_3DES_EDE_CBC_SHA


    * TLS 1.1 ciphers: 
       * TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_3DES_EDE_CBC_SHA


    * TLS 1.2 ciphers: 
       * TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_3DES_EDE_CBC_SHA",2009-02-01,,,0.0,1,"Disable TLS/SSL support for 3DES cipher suite


Configure the server to disable support for 3DES suite.

For Microsoft IIS web servers, see Microsoft Knowledgebase article  245030 (http://support.microsoft.com/kb/245030/)  for instructions on disabling 3DES cipher suite. 

The following recommended configuration provides a higher level of security. This configuration is compatible with Firefox 27, Chrome 22, IE 11, Opera 14 and Safari 7. SSLv2, SSLv3, and TLSv1 protocols are not recommended in this configuration. Instead, use TLSv1.1 and TLSv1.2 protocols.

Refer to your server vendor documentation to apply the recommended cipher configuration:

ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK",2016-09-15,2016-06-07,TLS/SSL Server Supports 3DES Cipher Suite
10.103.65.100,ip-10-103-65-100.ec2.internal,CentOS Linux,6.8,,HTTPS,443,Splunkd,"https://sweet32.info/,https://www.openssl.org/blog/blog/2016/08/24/sweet32,https://access.redhat.com/articles/2548661",0 Days,CVE-2016-2183,http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2183,"Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an important security parameter, defining the amount of data that can be encrypted under the same key. This is particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2 to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks occurs it is possible to use the collision to extract the plain text data.",ssl-cve-2016-2183-sweet32,"* 
      Negotiated with the following insecure cipher suites: 
    * TLS 1.0 ciphers: 
       * TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_3DES_EDE_CBC_SHA


    * TLS 1.1 ciphers: 
       * TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_3DES_EDE_CBC_SHA


    * TLS 1.2 ciphers: 
       * TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA

       * TLS_RSA_WITH_3DES_EDE_CBC_SHA",2016-08-24,,,419,5,"Disable TLS/SSL support for 3DES cipher suite


Configure the server to disable support for 3DES suite.

For Microsoft IIS web servers, see Microsoft Knowledgebase article  245030 (http://support.microsoft.com/kb/245030/)  for instructions on disabling 3DES cipher suite. 

The following recommended configuration provides a higher level of security. This configuration is compatible with Firefox 27, Chrome 22, IE 11, Opera 14 and Safari 7. SSLv2, SSLv3, and TLSv1 protocols are not recommended in this configuration. Instead, use TLSv1.1 and TLSv1.2 protocols.

Refer to your server vendor documentation to apply the recommended cipher configuration:

ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK",2016-09-15,2016-09-15,TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32)
